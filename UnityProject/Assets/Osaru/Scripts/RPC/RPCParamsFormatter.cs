
//
// this code is generated by cogegenerate.py
//
using Osaru.Serialization;
using System;


namespace Osaru.RPC
{
    public class RPCParamsFormatter<FORMATTER>
        where FORMATTER : IFormatter, new()
    {
        TypeRegistry m_r;
        public RPCParamsFormatter()
        {
            m_r = new TypeRegistry();
        }

        public ArraySegment<Byte> Params()
        {
            var f = new FORMATTER();
            f.BeginList(0);
            f.EndList();
            return f.GetStore().Bytes;
        }

        
        public ArraySegment<Byte> Params<A0>(A0 a0)
        {
            var f = new FORMATTER();
            f.BeginList(1);
            m_r.GetSerializer<A0>().Serialize(a0, f);

            f.EndList();
            return f.GetStore().Bytes;
        } 


        public ArraySegment<Byte> Params<A0, A1>(A0 a0, A1 a1)
        {
            var f = new FORMATTER();
            f.BeginList(2);
            m_r.GetSerializer<A0>().Serialize(a0, f);
            m_r.GetSerializer<A1>().Serialize(a1, f);

            f.EndList();
            return f.GetStore().Bytes;
        } 


        public ArraySegment<Byte> Params<A0, A1, A2>(A0 a0, A1 a1, A2 a2)
        {
            var f = new FORMATTER();
            f.BeginList(3);
            m_r.GetSerializer<A0>().Serialize(a0, f);
            m_r.GetSerializer<A1>().Serialize(a1, f);
            m_r.GetSerializer<A2>().Serialize(a2, f);

            f.EndList();
            return f.GetStore().Bytes;
        } 


        public ArraySegment<Byte> Params<A0, A1, A2, A3>(A0 a0, A1 a1, A2 a2, A3 a3)
        {
            var f = new FORMATTER();
            f.BeginList(4);
            m_r.GetSerializer<A0>().Serialize(a0, f);
            m_r.GetSerializer<A1>().Serialize(a1, f);
            m_r.GetSerializer<A2>().Serialize(a2, f);
            m_r.GetSerializer<A3>().Serialize(a3, f);

            f.EndList();
            return f.GetStore().Bytes;
        } 

    }
}
